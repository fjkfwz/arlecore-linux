################################################################################
source('~/arlecore_linux/Rfunctions/pairwiseDiffMatrix.r')
}
}
# get upperMatrix ------------------------------------------------------------
nextrow <- cbind(t(nextrow), matrix(NA, ncol=nCol-(i-1), nrow=1))
underMatrix <- rbind(underMatrix, nextrow)
underMatrix <- rbind(underMatrix, nextrow)
################################################################################
source("/home/lyn/arlecore_linux/Rfunctions/rParsingSettings_fst.r")
source("/home/lyn/arlecore_linux/Rfunctions/pairwiseDiffMatrix.r")
print source("/home/lyn/arlecore_linux/Rfunctions/pairwiseDiffMatrix.r")
source("/home/lyn/arlecore_linux/Rfunctions/pairwiseDiffMatrix.r")
infile <- "/home/lyn/arlecore_linux/amovadis.res/amovadis.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
install.packages("xmlTreeParse")
install.packages("XML")
install.packages("XML")
library(XML)
install.packages("XML")
install.packages("XML")
install.packages("XML")
library(XML)
parseArlequin(infile, outfiles, sourcePath)
parseArlequin(infile, outfiles, sourcePath)
parseArlequin(infile, outfiles, sourcePath)
parseArlequin(infile, outfiles, sourcePath)
parseArlequin(infile, outfiles, sourcePath)
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
infile <- "/home/lyn/arlecore_linux/cohen.res/cohen.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
infile <- "/home/lyn/arlecore_linux/cohen.res/cohen.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
infile <- "/home/lyn/arlecore_linux/cohen.res/cohen.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
infile <- "/home/lyn/arlecore_linux/cohen.res/cohen.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
infile <- "/home/lyn/arlecore_linux/cohen.res/cohen.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
infile <- "/home/lyn/arlecore_linux/cohen.res/cohen.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
infile <- "/home/lyn/arlecore_linux/cohen.res/cohen.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
infile <- "/home/lyn/arlecore_linux/cohen.res/cohen.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
infile <- "/home/lyn/arlecore_linux/cohen.res/cohen.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
infile <- "/home/lyn/arlecore_linux/cohen.res/cohen.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
infile <- "/home/lyn/arlecore_linux/cohen.res/cohen.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
infile <- "/home/lyn/arlecore_linux/cohen.res/cohen.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
infile <- "/home/lyn/arlecore_linux/cohen.res/cohen.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
infile <- "/home/lyn/arlecore_linux/cohen.res/cohen.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
infile <- "/home/lyn/arlecore_linux/cohen.res/cohen.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
infile <- "/home/lyn/arlecore_linux/cohen.res/cohen.xml"
outfiles <- "/home/lyn/arlecore_linux/amovadis.res/Graphics/"
sourcePath <- "/home/lyn/arlecore_linux/Rfunctions/"
source(paste(sourcePath, "parseArlequin.r", sep="") )
parseArlequin(infile, outfiles, sourcePath)
library(ade4)
install.packages("ade4")
library(ade4)
x<-read.csv('~/geoplotlib/examples/area_province_data.csv')
x<-read.csv('~/geoplotlib/examples/area_province_data .csv')
row.names=1
row.names=1
x<-read.csv('~/geoplotlib/examples/area_province_data .csv')
row.names=1
pca1<-dudi.pca(x[,3:10],scann=F,nf=10)
gcol = c(1, 2, 3,4,5,6,7,8,9)
s.class(dfxy = pca1$li, fac = y, col = gcol, xax = 1, yax = 2)
y<-as.factor(x$time)
s.class(dfxy = pca1$li, fac = y, col = gcol, xax = 1, yax = 2)
pca1<-dudi.pca(x[,2:10],scann=F,nf=10)
s.class(dfxy = pca1$li, fac = y, col = gcol, xax = 1, yax = 2)
pca1<-dudi.pca(x[,2:8],scann=F,nf=8)
s.class(dfxy = pca1$li, fac = y, col = gcol, xax = 1, yax = 2)
print y
echo y
s.class(dfxy = pca1$li, fac = y, col = gcol, xax = 1, yax = 2)
gcol = c(1, 2, 3,4,5,6,7,8,9)
pca1<-dudi.pca(x[,2:10],scann=F,nf=8)
s.class(dfxy = pca1$li, fac = y, col = gcol, xax = 1, yax = 2)
pca1<-dudi.pca(x[,3:10],scann=F,nf=8)
s.class(dfxy = pca1$li, fac = y, col = gcol, xax = 1, yax = 2)
prin row
x<-read.csv('~/geoplotlib/examples/area_province_data .csv')
row.names=1
pca1<-dudi.pca(x[,3:10],scann=F,nf=10)
gcol = c(1, 2, 3,4,5,6,7,8,9)
s.class(dfxy = pca1$li, fac = y, col = gcol, xax = 1, yax = 2)
x<-read.csv('~/geoplotlib/examples/area_province_data .csv')
row.names=1
y<-as.factor(x$time)
pca1<-dudi.pca(x[,3:5],scann=F,nf=5)
s.class(dfxy = pca1$li, fac = y, col = gcol, xax = 1, yax = 2)
x<-read.csv('~/geoplotlib/examples/area_province_data .csv')
s.class(dfxy = pca1$li, fac = y, col = gcol, xax = 1, yax = 2)
View(x)
x<-read.csv('~/geoplotlib/examples/area_province_data .csv')
View(x)
x<-read.csv('~/geoplotlib/examples/area_province_data .csv')
y<-as.factor(x$time)
s.class(dfxy = pca1$li, fac = y, col = gcol, xax = 1, yax = 2)
row.names=1
y<-as.factor(x$time)
pca1<-dudi.pca(x[,3:5],scann=F,nf=5)
s.class(dfxy = pca1$li, fac = y, col = gcol, xax = 1, yax = 2)
names(pca1)
barplot(pca1$eig)
pca1$eig
kip <- 100 * pca1$eig/sum(pca1$eig)
s.class(dfxy = pca1$li, fac = y, col = gcol, xax = 1, yax = 2)
kip <- 100 * pca1$eig/sum(pca1$eig)
barplot(pca1$eig)
pca1<-dudi.pca(x[,3:5],scann=F,nf=5)
gcol = c(1, 2, 3,4,5,6,7,8,9)
s.class(dfxy = pca1$li, fac = y, col = gcol, xax = 1, yax = 2)
barplot(pca1$eig)
pca1$eig
barplot()
barplot(22,44)
barplot(y1, ylim = c(0, max(y1) * 1.1), offset = 0, axis.lty = 1, names.arg = labels) box()
mydata<-c(1,2,3,4,5)
barplot(mydata)
barplot(mydata)
mydata<-c(1,2,3,4,5)
barplot(mydata)
